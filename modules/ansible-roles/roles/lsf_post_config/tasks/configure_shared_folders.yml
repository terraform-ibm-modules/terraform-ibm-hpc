---

# - name: Log directories | Remove duplicate logs
#   ansible.builtin.shell: >
#     find /opt/ibm/lsflogs -type f ! -name "*.{{ dns_domain_names }}" ! -name "ibmcloudgen2*" -delete
#   become: true
#   when: inventory_hostname in groups['management_nodes']

- name: Log directories | Setup shared base directories
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode | default('0755') }}"
    recurse: yes
    owner: lsfadmin
    group: root
  loop:
    - { path: "{{ SHARED_PATH }}/data", mode: '0755' }
    - { path: "{{ SHARED_PATH }}/logs", mode: '0755' }
    - { path: "{{ SHARED_PATH }}/repository-path", mode: '0755' }
    - { path: "{{ SHARED_PATH }}/das_staging_area", mode: '0755' }
  when: inventory_hostname == groups['management_nodes'][0]

- name: Log directories | Create per-host log directory under shared path
  file:
    path: "{{ SHARED_PATH }}/logs/{{ inventory_hostname }}"
    state: directory
    mode: '0777'
    owner: lsfadmin
    group: root
  when: inventory_hostname in groups['management_nodes']

- name: Log directories | Move existing logs to shared per-host directory
  shell: |
    mv {{ LSF_LOGS }}/* {{ SHARED_PATH }}/logs/{{ inventory_hostname }}/ 2>/dev/null || true
  args:
    warn: false
  when: inventory_hostname in groups['management_nodes']

- name: Log directories | Remove original LSF logs directory if it exists
  file:
    path: "{{ LSF_LOGS }}"
    state: absent
  ignore_errors: true
  when: inventory_hostname in groups['management_nodes']

- name: Log directories | Create symlink from shared per-host logs to LSF log path
  file:
    src: "{{ SHARED_PATH }}/logs/{{ inventory_hostname }}"
    dest: "{{ LSF_LOGS }}"
    state: link
    force: true
    owner: lsfadmin
    group: root
  when: inventory_hostname in groups['management_nodes']

- name: Log directories | Ensure correct permissions on per-host logs directory
  file:
    path: "{{ SHARED_PATH }}/logs/{{ inventory_hostname }}"
    state: directory
    mode: '0777'
    recurse: yes
    owner: lsfadmin
    group: root
  when: inventory_hostname in groups['management_nodes']

- name: Log directories | Create symlink to shared data directory
  file:
    src: "{{ SHARED_PATH }}/data"
    dest: "{{ LSF_TOP }}/work/data"
    state: link
    force: yes
  when: inventory_hostname == groups['management_nodes'][0]

- name: Log directories | Ensure ownership of shared data directory
  file:
    path: "{{ SHARED_PATH }}/data"
    state: directory
    recurse: yes
    owner: lsfadmin
    group: root
  when: inventory_hostname == groups['management_nodes'][0]

- name: Log directories | Ensure symlink for das_staging_area under LSF_TOP
  shell: |
    [ -L "{{ LSF_TOP }}/{{ item }}" ] && echo "Symlink exists, skipping." || { \
      [ -d "{{ LSF_TOP }}/{{ item }}" ] && rm -rf "{{ LSF_TOP }}/{{ item }}"; \
      ln -s "{{ SHARED_PATH }}/{{ item }}" "{{ LSF_TOP }}/{{ item }}"; }
  loop:
    - das_staging_area
  when: inventory_hostname == groups['management_nodes'][0]

- name: Read LSF hosts file from shared path
  slurp:
    src: "{{ SHARED_PATH }}/lsf/conf/hosts"
  register: lsf_hosts_file
  when: inventory_hostname == groups['login_node'][0]

- name: Override system /etc/hosts with LSF Login hosts
  blockinfile:
    path: /etc/hosts
    block: "{{ lsf_hosts_file.content | b64decode }}"
    marker: "# {mark} LSF HOSTS BLOCK"
    create: yes
  become: yes
  when: inventory_hostname == groups['login_node'][0]

- name: Copy Hosts | Copy LSF hosts file to /etc/hosts
  ansible.builtin.copy:
    src: "{{ SHARED_PATH }}/lsf/conf/hosts"
    dest: /etc/hosts
    owner: lsfadmin
    group: root
    mode: preserve
    remote_src: yes
  when: inventory_hostname == groups['login_node'][0]
