---
- name: Check if monitoring is enabled
  ansible.builtin.debug:
    msg: "Cloud Monitoring is enabled for management"
  when: monitoring_enable_for_management | bool

- name: Install required packages
  ansible.builtin.yum:
    name:
      - git
      - python3-pip
    state: present
  when: monitoring_enable_for_management | bool

- name: Install Sysdig Agent
  ansible.builtin.shell: |
    curl -sL https://ibm.biz/install-sysdig-agent | sudo bash -s -- --access_key {{ cloud_monitoring_access_key }} --collector {{ cloud_monitoring_ingestion_url }} --collector_port 6443 --secure true --check_certificate false --additional_conf 'sysdig_capture_enabled: false\nremotefs: true\nfeature:\n mode: monitor_light'
  when: monitoring_enable_for_management | bool

- name: Configure Sysdig
  ansible.builtin.lineinfile:
    path: "{{ sysdig_config_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    create: yes
  loop:
    - { regexp: "==ACCESSKEY==", line: "customerid: {{ cloud_monitoring_access_key }}" }
    - { regexp: "==COLLECTOR==", line: "collector: {{ cloud_monitoring_ingestion_url }}" }
    - { regexp: "^tags:", line: "tags: type:management,lsf:true" }
  when: monitoring_enable_for_management | bool

- name: Create Prometheus user
  ansible.builtin.user:
    name: prometheus
    shell: /sbin/nologin
    comment: "Prometheus user account"
  when: monitoring_enable_for_management | bool

- name: Download and extract Prometheus
  ansible.builtin.shell: |
    wget https://github.com/prometheus/prometheus/releases/download/v{{ PROMETHEUS_VERSION }}/prometheus-{{ PROMETHEUS_VERSION }}.linux-amd64.tar.gz
    tar xzvf prometheus-{{ PROMETHEUS_VERSION }}.linux-amd64.tar.gz
    mkdir -p /opt/prometheus/
    cp -av prometheus-{{ PROMETHEUS_VERSION }}.linux-amd64/* /opt/prometheus/
    chown -R prometheus:prometheus /opt/prometheus/
  when: monitoring_enable_for_management | bool

- name: Configure Prometheus
  ansible.builtin.copy:
    content: |
      global:
       scrape_interval: 60s
       evaluation_interval: 15s
      scrape_configs:
       - job_name: "lsf_prometheus_exporter"
         static_configs:
          - targets: ["localhost:9405"]
      remote_write:
       - url: "{{ cloud_monitoring_prws_url }}"
         authorization:
          credentials: "{{ cloud_monitoring_prws_key }}"
    dest: "{{ prometheus_config_file }}"
  when: monitoring_enable_for_management | bool

- name: Install Python 3.11
  ansible.builtin.yum:
    name: python3.11
    state: present
  when: monitoring_enable_for_management | bool

- name: Ensure Python 3.11 is set as default
  ansible.builtin.file:
    src: /usr/bin/python3.11
    dest: /usr/bin/python3
    state: link
  when: monitoring_enable_for_management | bool

- name: Ensure pip is installed for Python 3.11
  ansible.builtin.shell: |
    /usr/bin/python3.11 -m ensurepip --default-pip
    /usr/bin/python3.11 -m pip install --upgrade pip
  args:
    executable: /bin/bash
  when: monitoring_enable_for_management | bool

- name: Detect correct pip executable
  ansible.builtin.command: "/usr/bin/python3.11 -m pip --version"
  register: pip_check
  ignore_errors: true
  changed_when: false

- name: Set correct pip executable path
  ansible.builtin.set_fact:
    pip_executable: "{{ '/usr/bin/python3.11 -m pip' if 'pip' in pip_check.stdout else '/usr/bin/pip3' }}"

- name: Clone LSF Prometheus Exporter repository
  ansible.builtin.git:
    repo: "https://89088669eefb301f1aaa7046c9e567a372c51fe2@github.ibm.com/platformcomputing/lsf_prometheus_exporter"
    dest: "/tmp/lsf_prometheus_exporter"
    version: "wheel_pkg"
  when: monitoring_enable_for_management | bool

- name: Ensure /opt/ibm/lsf directory exists
  ansible.builtin.file:
    path: /opt/ibm/lsf
    state: directory
    mode: '0755'
    owner: lsfadmin
    group: lsfadmin
  when: monitoring_enable_for_management | bool

- name: Install LSF Prometheus Exporter
  ansible.builtin.command:
    cmd: "{{ pip_executable }} install /tmp/lsf_prometheus_exporter/lsf_prometheus_exporter-1.0.0-py3-none-any.whl"
  when: monitoring_enable_for_management | bool

- name: Create start script for LSF Prometheus Exporter
  ansible.builtin.copy:
    dest: /opt/ibm/lsf/start_lsf_prometheus_exporter.sh
    content: |
      #!/bin/bash
      source /opt/ibm/lsf/conf/profile.lsf
      exec /usr/bin/python3 -m lsf_prometheus_exporter
    mode: '0755'
    owner: lsfadmin
    group: lsfadmin
  when: monitoring_enable_for_management | bool

- name: Ensure start script has correct permissions
  ansible.builtin.file:
    path: /opt/ibm/lsf/start_lsf_prometheus_exporter.sh
    mode: '0755'
    owner: lsfadmin
    group: lsfadmin
  when: monitoring_enable_for_management | bool

- name: Create systemd service for LSF Prometheus Exporter
  ansible.builtin.copy:
    dest: /etc/systemd/system/lsf_prometheus_exporter.service
    content: |
      [Unit]
      Description=IBM LSF Prometheus Exporter Service
      After=network-online.target

      [Service]
      Type=simple
      ExecStart=/opt/ibm/lsf/start_lsf_prometheus_exporter.sh
      TimeoutSec=0
      RemainAfterExit=yes
      GuessMainPID=no
      RestartSec=10
      User=lsfadmin
      Group=lsfadmin

      [Install]
      WantedBy=multi-user.target
    mode: '0644'
  when: monitoring_enable_for_management | bool

- name: Reload systemd and start LSF Prometheus Exporter
  ansible.builtin.systemd:
    daemon_reload: yes
    name: lsf_prometheus_exporter
    enabled: yes
    state: restarted
  when: monitoring_enable_for_management | bool

- name: Enable and restart Sysdig Agent
  ansible.builtin.systemd:
    name: dragent
    enabled: yes
    state: restarted
  when: monitoring_enable_for_management | bool
