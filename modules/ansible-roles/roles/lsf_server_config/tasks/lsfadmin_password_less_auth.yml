---
- name: Passwordless SSH | Create necessary directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ HA_shared_dir }}/ssh"
  run_once: true

- name: Passwordless SSH | Validate compute public and private key content
  fail:
    msg: "compute_public_key_content or compute_private_key_content is empty. Exiting."
  when: (compute_public_key_content | length == 0) or (compute_private_key_content | length == 0)

- name: Passwordless SSH | Decode and copy compute public and private key contents
  shell: echo "{{ item.content }}" | base64 --decode > "{{ item.dest }}"
  loop:
    - { content: "{{ compute_public_key_content }}", dest: "{{ HA_shared_dir }}/ssh/id_rsa.pub" }
    - { content: "{{ compute_private_key_content }}", dest: "{{ HA_shared_dir }}/ssh/id_rsa" }
  no_log: true
  run_once: true

- name: Passwordless SSH | Create necessary directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /home/lsfadmin
    - "{{ lsfadmin_ssh_path }}"

- name: Passwordless SSH | Set permissions for shared SSH directory
  file:
    path: "{{ HA_shared_dir }}/ssh"
    state: directory
    mode: '0777'
    recurse: yes

- name: Passwordless SSH | Copy authorized_keys to lsfadmin's .ssh
  copy:
    src: /home/vpcuser/.ssh/authorized_keys
    dest: "{{ lsfadmin_ssh_path }}/authorized_keys"
    remote_src: yes
    owner: lsfadmin
    group: lsfadmin
    mode: '0600'

- name: Passwordless SSH | Copy public key content to authorized_keys
  command: "cat {{ HA_shared_dir }}/ssh/id_rsa.pub"
  register: pub_key_content
  changed_when: false

- name: Passwordless SSH | Append public key to authorized_keys
  lineinfile:
    path: "{{ lsfadmin_ssh_path }}/authorized_keys"
    line: "{{ pub_key_content.stdout }}"
    owner: lsfadmin
    group: lsfadmin
    mode: '0600'

- name: Passwordless SSH | Copy private key to lsfadmin's .ssh
  copy:
    src: "{{ HA_shared_dir }}/ssh/id_rsa"
    dest: "{{ lsfadmin_ssh_path }}/id_rsa"
    remote_src: yes
    owner: lsfadmin
    group: lsfadmin
    mode: '0400'

- name: Passwordless SSH | Disable StrictHostKeyChecking
  lineinfile:
    path: "{{ lsfadmin_ssh_path }}/config"
    line: "StrictHostKeyChecking no"
    create: yes
    owner: lsfadmin
    group: lsfadmin
    mode: '0644'

- name: Passwordless SSH | Ensure proper permissions on .ssh directory
  file:
    path: "{{ lsfadmin_ssh_path }}"
    state: directory
    owner: lsfadmin
    group: lsfadmin
    mode: '0700'