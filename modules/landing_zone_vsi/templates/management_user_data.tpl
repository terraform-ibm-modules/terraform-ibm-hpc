#!/usr/bin/bash

###################################################
# Copyright (C) IBM Corp. 2023 All Rights Reserved.
# Licensed under the Apache License v2.0
###################################################

#!/usr/bin/env bash
if grep -E -q "CentOS|Red Hat" /etc/os-release
then
    USER=vpcuser
elif grep -q "Ubuntu" /etc/os-release
then
    USER=ubuntu
fi
sed -i -e "s/^/no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command=\"echo \'Please client as the user \\\\\"$USER\\\\\" rather than the user \\\\\"root\\\\\".\';echo;sleep 5; exit 142\" /" /root/.ssh/authorized_keys

# input parameters
echo "${bastion_public_key_content}" >> ~/.ssh/authorized_keys
echo "${management_public_key_content}" >> ~/.ssh/authorized_keys
echo "StrictHostKeyChecking no" >> ~/.ssh/config
echo "${management_private_key_content}" > ~/.ssh/id_rsa
chmod 600 ~/.ssh/id_rsa

# Network Configuration
RESOLV_CONF="/etc/resolv.conf"
BACKUP_FILE="/etc/resolv.conf.bkp"

echo "DOMAIN=${management_dns_domain}" >> "/etc/sysconfig/network-scripts/ifcfg-${management_interfaces}"
echo "MTU=9000" >> "/etc/sysconfig/network-scripts/ifcfg-${management_interfaces}"
chage -I -1 -m 0 -M 99999 -E -1 -W 14 vpcuser
sleep 20
systemctl restart NetworkManager

make_editable() {
    if lsattr "$RESOLV_CONF" 2>/dev/null | grep -q 'i'; then
        chattr -i "$RESOLV_CONF"
    fi
}

make_immutable() {
    chattr +i "$RESOLV_CONF"
}

restart_networkmanager() {
    systemctl restart NetworkManager
}

echo "Checking if 'Generated by NetworkManager' exists in $RESOLV_CONF..."
if ! grep -Fq "Generated by NetworkManager" "$RESOLV_CONF"; then
    echo "NetworkManager not found, applying fix..."

    sleep 20

    if [ ! -f "$BACKUP_FILE" ]; then
        cp "$RESOLV_CONF" "$BACKUP_FILE"
        echo "Backup created at $BACKUP_FILE"
    fi

    make_editable

    attempt=1
    max_attempts=5
    while ! grep -Fq "Generated by NetworkManager" "$RESOLV_CONF" && [ $attempt -le $max_attempts ]; do
        echo "Attempt $attempt: 'Generated by NetworkManager' not found, restarting NetworkManager..."
        restart_networkmanager
        sleep 5
        attempt=$((attempt + 1))
    done

    if grep -q '^search ' "$RESOLV_CONF"; then
        sed -i "s|^search .*|search ${management_dns_domain}|" "$RESOLV_CONF"
    else
        sed -i "1i search ${management_dns_domain}" "$RESOLV_CONF"
    fi

    make_immutable
    echo "Updated $RESOLV_CONF with search domain."

    if systemctl is-active --quiet NetworkManager; then
        restart_networkmanager
        echo "NetworkManager restarted."
    else
        echo "NetworkManager is not running."
    fi
else
    echo "Search domain already present, Updating $RESOLV_CONF has immutable."
    make_immutable
fi
