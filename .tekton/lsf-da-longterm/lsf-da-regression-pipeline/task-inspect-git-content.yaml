---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: inspect-git-content
spec:
  params:
    - name: repository
      description: the git repo url
    - name: directory-name
      default: "."
    - name: properties-file
      default: build.properties
    - name: git-credentials-json-file
      default: ""
    - name: git-branch
      description: The active branch for the repository
    - name: git-commit
      description: The current commit id that was cloned
    - name: git-user
      description: The auth user that cloned the repository
  workspaces:
    - name: workspace
      mountPath: /artifacts
  steps:
    - name: inspect-git-content
      image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.29
      env:
        - name: REPOSITORY
          value: $(params.repository)
        - name: DIRECTORY_NAME
          value: $(params.directory-name)
      workingDir: /artifacts
      command: ["/bin/sh", "-c"]
      args:
        - |
          cd "$DIRECTORY_NAME"
          pwd
          # show the git content
          echo "Executing 'git show-branch --all'"
          git show-branch --all
          echo ""
          # show the directory content recursively
          echo "##############"
          ls -l -R
          echo ""
          # show the README.md content
          echo "##############"
          echo "Executing 'cat README.md'"
          cat README.md
          echo ""
          echo "##############"
          echo "Executing 'cat $(workspaces.workspace.path)/$(params.properties-file)'"
          cat $(workspaces.workspace.path)/$(params.properties-file)
          echo ""
          if [ "$(params.git-credentials-json-file)" ]; then
            echo "##############"
            echo "Executing 'jq $(workspaces.workspace.path)/$(params.git-credentials-json-file)'"
            cat $(workspaces.workspace.path)/$(params.git-credentials-json-file) | jq '. | ."GIT_TOKEN"="<REDACTED>"'
          fi
          if [ -z "$GIT_TOKEN" ]; then
            AUTHTYPE=$(jq -r --arg git_repo "$REPOSITORY" \
            '.services[] | select (.parameters.repo_url==$git_repo) | .parameters.auth_type' \
            /cd-config/toolchain.json)
            if [[ "${AUTHTYPE}" == "pat" ]]; then
              TOKEN=$(jq -r --arg git_repo "$REPOSITORY" \
              '.services[] | select (.parameters.repo_url==$git_repo) | .parameters.api_token' \
              /cd-config/toolchain.json)
              if [[ "${TOKEN}" ]]; then
                echo "Using access token from toolchain"
                GIT_TOKEN="${TOKEN}"
              fi
            fi
          fi
          echo "##############"
          echo "Showing task inputs:"
          echo "params.repository: $(params.repository)"
          echo "params.git-branch: $(params.git-branch)"
          echo "params.git-commit: $(params.git-commit)"
          echo "params.git-user: $(params.git-user)"
          echo "params.directory-name: $(params.directory-name)"
