---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-git-pr-status
spec:
  params:
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
    - name: pr-repository
      description: The source git repo for the PullRequest
      default: ""
    - name: pr-branch
      description: The source branch for the PullRequest
      default: ""
    - name: pr-revision
      description: the commit id/sha for the PullRequest
      default: ""
    - name: git_access_token
      description: the token to access the git repository for the clone operations
      default: ""
    - name: properties-file
      default: "output/thebuild.properties"
    - name: git-credentials-json-file
      default: "output/secrets/thecredentials.json"
    - name: context
      default: "commit message check"
    - name: description
      default: "verify the commit message"
    - name: pipeline-debug
      default: "0"
    - name: directory-name
      default: "."
    - name: zone
      default: ""
      description: The IBM Cloud zone name within the selected region where the IBM Cloud HPC cluster should be deployed and requires a single zone input value. Supported zones are eu-de-2 and eu-de-3 for eu-de, us-east-1 and us-east-3 for us-east, and us-south-1 for us-south. The management nodes, file storage shares, and compute nodes will be deployed in the same zone.[Learn more](https://cloud.ibm.com/docs/vpc?topic=vpc-creating-a-vpc-in-a-different-region#get-zones-using-the-cli).
    - name: resource_group
      description: Resource group name from your IBM Cloud account where the VPC resources should be deployed. Note. If the resource group value is set as null, automation creates two different RG with the name (workload-rg and service-rg). For additional information on resource groups, see [Managing resource groups](https://cloud.ibm.com/docs/account?topic=account-rgs).
      default: Default
    - name: compute_image_name_rhel
      description: Name of the custom image that you want to use to create virtual server instances in your IBM Cloud account to deploy the IBM Cloud HPC cluster dynamic compute nodes. By default, the solution uses a RHEL 8-6 OS image with additional software packages mentioned [here](https://cloud.ibm.com/docs/hpc-spectrum-LSF#create-custom-image). The solution also offers, Ubuntu 22-04 OS base image (hpcaas-lsf10-ubuntu2204-compute-v1). If you would like to include your application-specific binary files, follow the instructions in [ Planning for custom images ](https://cloud.ibm.com/docs/vpc?topic=vpc-planning-custom-images) to create your own custom image and use that to build the IBM Cloud HPC cluster through this offering.
      default: ""
    - name: compute_image_name_ubuntu
      description: Name of the custom image that you want to use to create virtual server instances in your IBM Cloud account to deploy the IBM Cloud HPC cluster dynamic compute nodes. By default, the solution uses a RHEL 8-6 OS image with additional software packages mentioned [here](https://cloud.ibm.com/docs/hpc-spectrum-LSF#create-custom-image). The solution also offers, Ubuntu 22-04 OS base image (hpcaas-lsf10-ubuntu2204-compute-v1). If you would like to include your application-specific binary files, follow the instructions in [ Planning for custom images ](https://cloud.ibm.com/docs/vpc?topic=vpc-planning-custom-images) to create your own custom image and use that to build the IBM Cloud HPC cluster through this offering.
      default: ""
    - name: login_image_name
      description: Name of the custom image that you want to use to create virtual server instances in your IBM Cloud account to deploy the IBM Cloud HPC cluster login node. By default, the solution uses a RHEL 8-6 OS image with additional software packages mentioned [here](https://cloud.ibm.com/docs/hpc-spectrum-LSF#create-custom-image). The solution also offers, Ubuntu 22-04 OS base image (hpcaas-lsf10-ubuntu2204-compute-v2). If you would like to include your application-specific binary files, follow the instructions in [ Planning for custom images ](https://cloud.ibm.com/docs/vpc?topic=vpc-planning-custom-images) to create your own custom image and use that to build the IBM Cloud HPC cluster through this offering.
      default: ""
    - name: management_image_name
      description: Name of the custom image that you want to use to create virtual server instances in your IBM Cloud account to deploy the IBM Cloud HPC cluster management nodes. By default, the solution uses a RHEL88 base image with additional software packages mentioned [here](https://cloud.ibm.com/docs/ibm-spectrum-lsf#create-custom-image). If you would like to include your application-specific binary files, follow the instructions in [ Planning for custom images ](https://cloud.ibm.com/docs/vpc?topic=vpc-planning-custom-images) to create your own custom image and use that to build the IBM Cloud HPC cluster through this offering.
      default: ""
    - name: cos_region
      description: The cos region name.
      default: ""
    - name: cos_bucket
      description: The cos bucket name.
      default: ""
    - name: cos_instance_crn
      description: The cos instance crn.
      default: ""
    - name: cos_api_key
      description: The cos account api key.
      default: ""
    - name: hpc_custom_reports_repo
      description: The HPC custom reports storage repository.
      default: ""
    - name: hpc_custom_reports_branch
      description: The HPC custom reports storage repository branch.
      default: "main"
    - name: git_user_name
      description: The git user name.
      default: ""
    - name: git_user_email
      description: The git user email.
      default: ""
    - name: solution
      description: Provide the value for the solution that is needed for the support of lsf and HPC.
      default: "lsf"
    - name: ibm_customer_number
      description: Comma-separated list of the IBM Customer Number(s) (ICN) that is used for the Bring Your Own License (BYOL) entitlement check. For more information on how to find your ICN, see [What is my IBM Customer Number (ICN)?](https://www.ibm.com/support/pages/what-my-ibm-customer-number-icn)..
      default: ""
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: set-git-pr-pending
      taskRef:
        name: git-set-commit-status
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.pr-revision)
        - name: context
          value: $(params.context)
        - name: description
          value: $(params.description)
        - name: state
          value: "pending"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: git-clone
      taskRef:
        name: git-clone-repo
      runAfter: [set-git-pr-pending]
      params:
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: pr-repository
          value: $(params.pr-repository)
        - name: pr-branch
          value: $(params.pr-branch)
        - name: pr-revision
          value: $(params.pr-revision)
        - name: git_access_token
          value: $(params.git_access_token)
        - name: directory-name
          value: $(params.directory-name)
        - name: properties-file
          value: $(params.properties-file)
        - name: git-credentials-json-file
          value: $(params.git-credentials-json-file)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: set-git-pr-running
      runAfter: [git-clone]
      taskRef:
        name: git-set-commit-status
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.pr-revision)
        - name: context
          value: $(params.context)
        - name: description
          value: $(params.description)
        - name: state
          value: "running"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: pre-requisites-install
      runAfter: [git-clone]
      taskRef:
        name: pre-requisites-install
      workspaces:
        - name: workspace
          workspace: pipeline-ws
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: repository
          value: $(params.repository)
    - name: ssh-key-creation
      runAfter: [git-clone, pre-requisites-install]
      taskRef:
        name: ssh-key-creation
      workspaces:
        - name: workspace
          workspace: pipeline-ws
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: resource_group
          value: $(params.resource_group)
        - name: pr-revision
          value: $(params.pr-revision)
        - name: solution
          value: $(params.solution)
    - name: wes-lsf-da-rhel-pr
      runAfter: [git-clone, pre-requisites-install, ssh-key-creation]
      taskRef:
        name: wes-lsf-da-rhel-pr
      workspaces:
        - name: workspace
          workspace: pipeline-ws
      params:
        - name: repository
          value: $(params.repository)
        - name: git_access_token
          value: $(params.git_access_token)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: zone
          value: $(params.zone)
        - name: resource_group
          value: $(params.resource_group)
        - name: compute_image_name_rhel
          value: $(params.compute_image_name_rhel)
        - name: login_image_name
          value: $(params.login_image_name)
        - name: management_image_name
          value: $(params.management_image_name)
        - name: pr-revision
          value: $(params.pr-revision)
        - name: cos_region
          value: $(params.cos_region)
        - name: cos_bucket
          value: $(params.cos_bucket)
        - name: cos_instance_crn
          value: $(params.cos_instance_crn)
        - name: cos_api_key
          value: $(params.cos_api_key)
        - name: hpc_custom_reports_repo
          value: $(params.hpc_custom_reports_repo)
        - name: hpc_custom_reports_branch
          value: $(params.hpc_custom_reports_branch)
        - name: git_user_name
          value: $(params.git_user_name)
        - name: git_user_email
          value: $(params.git_user_email)
        - name: solution
          value: $(params.solution)
        - name: ibm_customer_number
          value: $(params.ibm_customer_number)
    # - name: wes-lsf-da-ubuntu-pr
    #   runAfter: [git-clone, pre-requisites-install, ssh-key-creation]
    #   taskRef:
    #     name: wes-lsf-da-ubuntu-pr
    #   workspaces:
    #     - name: workspace
    #       workspace: pipeline-ws
    #   params:
    #     - name: repository
    #       value: $(params.repository)
    #     - name: git_access_token
    #       value: $(params.git_access_token)
    #     - name: pipeline-debug
    #       value: $(params.pipeline-debug)
    #     - name: zone
    #       value: $(params.zone)
    #     - name: resource_group
    #       value: $(params.resource_group)
    #     - name: compute_image_name_ubuntu
    #       value: $(params.compute_image_name_ubuntu)
    #     - name: login_image_name
    #       value: $(params.login_image_name)
    #     - name: management_image_name
    #       value: $(params.management_image_name)
    #     - name: pr-revision
    #       value: $(params.pr-revision)
    #     - name: cos_region
    #       value: $(params.cos_region)
    #     - name: cos_bucket
    #       value: $(params.cos_bucket)
    #     - name: cos_instance_crn
    #       value: $(params.cos_instance_crn)
    #     - name: cos_api_key
    #       value: $(params.cos_api_key)
    #     - name: hpc_custom_reports_repo
    #       value: $(params.hpc_custom_reports_repo)
    #     - name: hpc_custom_reports_branch
    #       value: $(params.hpc_custom_reports_branch)
    #     - name: git_user_name
    #       value: $(params.git_user_name)
    #     - name: git_user_email
    #       value: $(params.git_user_email)
    - name: ssh-key-deletion
      runAfter: [wes-lsf-da-rhel-pr]
      taskRef:
        name: ssh-key-deletion
      workspaces:
        - name: workspace
          workspace: pipeline-ws
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: pr-revision
          value: $(params.pr-revision)
        - name: solution
          value: $(params.solution)
    - name: error-check-on-lsf-pr-infra-log
      runAfter: [git-clone, wes-lsf-da-rhel-pr]
      workspaces:
        - name: workspace
          workspace: pipeline-ws
      taskSpec:
        workspaces:
          - name: workspace
            description: The git repo will be cloned onto the volume backing this workspace
            mountPath: /artifacts
        steps:
          - name: error-pr-rhel-suite
            image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:latest
            workingDir: "/artifacts"
            command: ["/bin/bash", "-c"]
            args:
              - |
                #!/bin/bash
                LOG_FILE_NAME="lsf-pr-rhel-suite.json"
                source .tekton/scripts/issue_track.sh
                issue_track "${LOG_FILE_NAME}" "PR"
          # - name: error-pr-ubuntu-suite
          #   image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:latest
          #   workingDir: "/artifacts"
          #   command: ["/bin/bash", "-c"]
          #   args:
          #     - |
          #       #!/bin/bash
          #       LOG_FILE_NAME="pipeline-pr-ubuntu-suite.json"
          #       source .tekton/scripts/issue_track.sh
          #       issue_track "${LOG_FILE_NAME}" "PR"
  finally:
    - name: set-git-commit-status
      taskRef:
        name: git-set-commit-status
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.pr-revision)
        - name: context
          value: $(params.context)
        - name: description
          value: $(params.description)
        - name: state
          value: "$(tasks.error-check-on-lsf-pr-infra-log.status)"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
